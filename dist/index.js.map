{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import '@k2oss/k2-broker-core';\r\n\r\nmetadata = {\r\n    \"systemName\": \"[Immersion] - Vendor Onboarding - Experian Business Search\",\r\n    \"displayName\": \"Vendor Onboarding - Experian Business Search\",\r\n    \"description\": \"Perform Experian search on a business and get a suggested credit level.\",\r\n    \"configuration\": {\r\n        \"ServiceURL\": {\r\n            displayName: \"Experian Search URL\",\r\n            type: \"string\",\r\n            value: \"https://sandbox-us-api.experian.com/\"\r\n        }\r\n    }\r\n};\r\n\r\nondescribe = async function ({configuration}): Promise<void> {\r\n    postSchema({\r\n        objects: {\r\n            \"ExperianBusinessSearch\": {\r\n                displayName: \"Experian Business Search\",\r\n                description: \"Experian Business Search\",\r\n                properties: {\r\n                    \"client_id\": {\r\n                        displayName: \"client_id\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"client_secret\": {\r\n                        displayName: \"client_secret\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"username\": {\r\n                        displayName: \"username\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"password\": {\r\n                        displayName: \"password\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"issued_at\": {\r\n                        displayName: \"issued_at\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"expires_in\": {\r\n                        displayName: \"expires_in\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"token_type\": {\r\n                        displayName: \"token_type\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"access_token\": {\r\n                        displayName: \"access_token\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"refresh_token\": {\r\n                        displayName: \"refresh_token\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"accessToken\" : {\r\n                        displayName: \"accessToken\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"name\" : {\r\n                        displayName: \"name\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"city\" : {\r\n                        displayName: \"city\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"state\" : {\r\n                        displayName: \"state\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"subcode\" : {\r\n                        displayName: \"subcode\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"bin\": {\r\n                        displayName: \"bin\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"businessName\": {\r\n                        displayName: \"businessName\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"phone\": {\r\n                        displayName: \"phone\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"street\": {\r\n                        displayName: \"street\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"zip\": {\r\n                        displayName: \"zip\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"zipExtension\": {\r\n                        displayName: \"zipExtension\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"score\": {\r\n                        displayName: \"score\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"percentileRanking\": {\r\n                        displayName: \"percentileRanking\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"recommendedCreditLimitAmount\": {\r\n                        displayName: \"recommendedCreditLimitAmount\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"riskCode\": {\r\n                        displayName: \"riskCode\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"riskDefinition\": {\r\n                        displayName: \"riskDefinition\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"highUtilizationAccounts\": {\r\n                        displayName: \"highUtilizationAccounts\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"seriouslyDelinquentAccounts\": {\r\n                        displayName: \"seriouslyDelinquentAccounts\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"activeCommercialAccounts\": {\r\n                        displayName: \"activeCommercialAccounts\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"delinquentCommercialAccounts\":{\r\n                            displayName: \"delinquentCommercialAccounts\",\r\n                            type: \"string\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    \"businessSearch\": {\r\n                        displayName: \"Perform Business Search\",\r\n                        type: \"execute\",\r\n                        inputs: [\"username\",\"password\",\"client_id\",\"client_secret\",\"name\",\"city\",\"state\",\"subcode\"],\r\n                        outputs: [\"bin\",\"businessName\",\"phone\",\"street\",\"city\",\"state\",\"zip\",\"zipExtension\",\"score\",\"percentileRanking\",\"recommendedCreditLimitAmount\",\"riskCode\",\"riskDefinition\",\"highUtilizationAccounts\",\"seriouslyDelinquentAccounts\",\"activeCommercialAccounts\",\"delinquentCommercialAccounts\"]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n};\r\n\r\nonexecute = async function ({objectName, methodName, parameters, properties, configuration}): Promise<void> {\r\n    switch (objectName) {\r\n        case \"ExperianBusinessSearch\": await onexecutePosts(methodName, parameters, properties, configuration); break;\r\n        default: throw new Error(\"The object \" + objectName + \" is not supported.\");\r\n    }\r\n}\r\n\r\nasync function onexecutePosts(methodName: string, parameters: SingleRecord, properties: SingleRecord, configuration: SingleRecord): Promise<void> {\r\n    switch (methodName) {\r\n        case \"businessSearch\": await onexecutePostsbusinessSearch(parameters, properties, configuration); break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported.\");\r\n    }\r\n}\r\n\r\nfunction onexecutePostsbusinessSearch(parameters: SingleRecord, properties: SingleRecord, configuration: SingleRecord): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n\r\n        try {\r\n            getToken(properties, configuration)\r\n                .then (searchBusiness)\r\n                .then (creditScore);\r\n            resolve();\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\r\n\r\nfunction getToken (properties: SingleRecord, configuration: SingleRecord) { \r\n    return new Promise ((resolve, reject) => {\r\n\r\n        var urlValue = configuration[\"ServiceURL\"] + 'oauth2/v1/token';\r\n        var preBody = {\r\n            username: properties['username'],\r\n            password: properties['password'],\r\n            client_id: properties['client_id'],\r\n            client_secret: properties['client_secret']\r\n        };\r\n        var body = JSON.stringify(preBody);\r\n        //console.log(\"BK_ExperianAuth_body: \" + body);\r\n        var xhr = new XMLHttpRequest();\r\n        \r\n        xhr.onreadystatechange = function () {\r\n            try {\r\n                if (xhr.readyState !== 4) return;\r\n                if (xhr.status !== 200) throw new Error(\"Failed with status code \" + xhr.status + \" \" + xhr.responseText);\r\n\r\n                //console.log(\"BK_\" + xhr.responseText);\r\n                resolve({\r\n                    properties: properties,\r\n                    configuration: configuration,\r\n                    authToken: JSON.parse(xhr.responseText)\r\n                })\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        }\r\n        \r\n        xhr.open(\"POST\", urlValue);\r\n        xhr.setRequestHeader('Content-Type', 'application/json');\r\n        xhr.send(body);\r\n    }   \r\n)};\r\n\r\nfunction searchBusiness (obj){\r\n    return new Promise ((resolve, reject) => {\r\n        //console.log(\"BK_ExperianSearch_searchBusiness_Input : \" + JSON.stringify(obj));\r\n        var urlValue = obj.configuration.ServiceURL + 'businessinformation/businesses/v1/search';\r\n        //console.log(\"BK_Experian_searchBusiness_urlValue = \" + urlValue);\r\n        var bearerToken = 'Bearer ' + obj.authToken.access_token;\r\n        var preBody = {\r\n            name: obj.properties.name,\r\n            city: obj.properties.city,\r\n            state: obj.properties.state,\r\n            subcode: obj.properties.subcode\r\n        };\r\n        var body = JSON.stringify(preBody);\r\n        //console.log(\"BK_ExperianAuth_body: \" + body);\r\n        var xhr = new XMLHttpRequest();\r\n        \r\n        xhr.onreadystatechange = function () {\r\n            try {\r\n                if (xhr.readyState !== 4) return;\r\n                if (xhr.status !== 200) throw new Error(\"Failed with status code \" + xhr.status + \" \" + xhr.responseText);\r\n\r\n                //console.log(\"BK_\" + xhr.responseText);\r\n                resolve({\r\n                    results: JSON.parse(xhr.responseText),\r\n                    obj\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        }\r\n        \r\n        xhr.open(\"POST\", urlValue);\r\n        xhr.setRequestHeader('Content-Type', 'application/json');\r\n        xhr.setRequestHeader('Authorization', bearerToken);\r\n        xhr.send(body);\r\n    }\r\n)};\r\n\r\nfunction creditScore (obj){\r\n    return new Promise ((resolve, reject) => {\r\n        //If no bin is present, throw error to user.\r\n        if (obj.results.results[0].bin == null)\r\n            throw new Error(\"No business found. Try modifying business name, city and/or state and search again.\");\r\n        //console.log(\"BK_Experian_creditScore_Input: \" + JSON.stringify(obj));\r\n        var urlValue = obj.obj.configuration.ServiceURL + 'businessinformation/businesses/v1/scores';\r\n        //console.log(\"BK_CreditScore_urlValue: \"+urlValue);\r\n        var bearerToken = 'Bearer ' + obj.obj.authToken.access_token;\r\n        var preBody = {\r\n            bin: obj.results.results[0].bin,\r\n            subcode: obj.obj.properties.subcode,\r\n            commercialScore: true\r\n        };\r\n        var body = JSON.stringify(preBody);\r\n        //console.log(\"BK_ExperianAuth_body: \" + body);\r\n        var xhr = new XMLHttpRequest();\r\n        \r\n        xhr.onreadystatechange = function () {\r\n            try {\r\n                if (xhr.readyState !== 4) return;\r\n                if (xhr.status !== 200) throw new Error(\"Failed with status code \" + xhr.status + \" \" + xhr.responseText);\r\n\r\n                //console.log(\"BK_\" + xhr.responseText);\r\n                var completeResult = JSON.parse(xhr.responseText);\r\n                postResult({\r\n                    \"bin\":completeResult.results.businessHeader.bin,\r\n                    \"businessName\":completeResult.results.businessHeader.businessName,\r\n                    \"phone\": completeResult.results.businessHeader.phone,\r\n                    \"street\": completeResult.results.businessHeader.address.street,\r\n                    \"city\": completeResult.results.businessHeader.address.city,\r\n                    \"state\": completeResult.results.businessHeader.address.state,\r\n                    \"zip\": completeResult.results.businessHeader.address.zip,\r\n                    \"zipExtension\": completeResult.results.businessHeader.address.zipExtension,\r\n                    \"score\": completeResult.results.commercialScore.score,\r\n                    \"percentileRanking\": completeResult.results.commercialScore.percentileRanking,\r\n                    \"recommendedCreditLimitAmount\": completeResult.results.commercialScore.recommendedCreditLimitAmount,\r\n                    \"riskCode\": completeResult.results.commercialScore.riskClass.code,\r\n                    \"riskDefinition\": completeResult.results.commercialScore.riskClass.definition,\r\n                    \"highUtilizationAccounts\": completeResult.results.commercialScoreFactors[0].code,\r\n                    \"seriouslyDelinquentAccounts\": completeResult.results.commercialScoreFactors[1].code,\r\n                    \"activeCommercialAccounts\": completeResult.results.commercialScoreFactors[2].code,\r\n                    \"delinquentCommercialAccounts\": completeResult.results.commercialScoreFactors[3].code\r\n                })\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        }\r\n        \r\n        xhr.open(\"POST\", urlValue);\r\n        xhr.setRequestHeader('Content-Type', 'application/json');\r\n        xhr.setRequestHeader('Authorization', bearerToken);\r\n        xhr.send(body);\r\n    }\r\n)};"],"names":["searchBusiness","obj","Promise","resolve","reject","urlValue","configuration","ServiceURL","bearerToken","authToken","access_token","preBody","name","properties","city","state","subcode","body","JSON","stringify","xhr","XMLHttpRequest","onreadystatechange","readyState","status","Error","responseText","results","parse","e","open","setRequestHeader","send","creditScore","bin","commercialScore","completeResult","postResult","businessHeader","businessName","phone","address","street","zip","zipExtension","score","percentileRanking","recommendedCreditLimitAmount","riskClass","code","definition","commercialScoreFactors","metadata","displayName","type","value","ondescribe","async","postSchema","objects","description","methods","inputs","outputs","onexecute","objectName","methodName","parameters","username","password","client_id","client_secret","getToken","then","onexecutePostsbusinessSearch","onexecutePosts"],"mappings":"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"}